/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.35
 * Generated at: 2020-07-09 07:43:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.template;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class write_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\t\r\n");
      out.write("<h1 align=\"center\">회원가입</h1>\r\n");
      out.write("<form name=\"writeForm\" method=\"post\" action=\"/miniProject/member/write.do\">\r\n");
      out.write("\t<table align=\"center\" border=\"1\" cellspacing=\"0\" cellpadding=\"10\"\r\n");
      out.write("\t\tbordercolor=\"black\" bgcolor=\"\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td width=\"70\" align=\"center\">이름</td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"name\" id=\"name\" placeholder=\"이름 입력\">\r\n");
      out.write("\t\t\t\t<div id=\"nameDiv\"></div>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td align=\"center\">아이디</td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"id\" id=\"id\" placeholder=\"아이디 입력\">\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"check\" value=\"\" id=\"check\">\r\n");
      out.write("\t\t\t\t<div id=\"idDiv\"></div>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td align=\"center\">비밀번호</td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<input type=\"password\" name=\"pwd\" id=\"pwd\">\r\n");
      out.write("\t\t\t\t<div id=\"pwdDiv\"></div>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td align=\"center\">재확인</td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<input type=\"password\" name=\"repwd\" id=\"repwd\">\r\n");
      out.write("\t\t\t\t<div id=\"repwdDiv\"></div>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td align=\"center\">이메일</td>\r\n");
      out.write("\t\t\t<td><input type=\"text\" size=\"10\" name=\"email1\">@<input\r\n");
      out.write("\t\t\t\tsize=\"15\" name=\"email2\" list=\"defaultEmails\"\r\n");
      out.write("\t\t\t\tplaceholder=\"ex) gmail.com\"> <datalist id=\"defaultEmails\">\r\n");
      out.write("\t\t\t\t\t<option value=\"naver.com\">\r\n");
      out.write("\t\t\t\t\t<option value=\"gmail.com\">\r\n");
      out.write("\t\t\t\t\t<option value=\"daum.net\">\r\n");
      out.write("\t\t\t\t</datalist></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan=\"2\" align=\"center\">\r\n");
      out.write("\t\t\t\t<input type=\"button\"value=\"회원가입\" id=\"checkWriteForm\">\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("</form>\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(document).ready(function(){\t\r\n");
      out.write("\t$('#id').focusout(function() {\r\n");
      out.write("\t\tlet id = $('#id').val();\r\n");
      out.write("\t\tif (id == \"\") {\r\n");
      out.write("\t\t\t$('#idDiv').text('먼저 아이디를 입력하세요.');\r\n");
      out.write("\t\t\t$('#idDiv').css('color', 'magenta');\r\n");
      out.write("\t\t\t$('#idDiv').css('font-size', '8pt');\r\n");
      out.write("\t\t\t$('#idDiv').css('font-weight', 'bold');\r\n");
      out.write("\t\t\t$('#id').focus();\r\n");
      out.write("\t\t} else if (id == \"test\") {\r\n");
      out.write("\t\t\t$('#idDiv').text('이미 존재하는 아이디입니다.');\r\n");
      out.write("\t\t\t$('#idDiv').css('color', 'red');\r\n");
      out.write("\t\t\t$('#idDiv').css('font-size', '8pt');\r\n");
      out.write("\t\t\t$('#idDiv').css('font-weight', 'bold');\r\n");
      out.write("\t\t\t$('#id').focus();\r\n");
      out.write("\t\t} else if (id != \"test\") {\r\n");
      out.write("\t\t\t$('#idDiv').text('사용가능한 아이디입니다.');\r\n");
      out.write("\t\t\t$('#idDiv').css('color', 'blue');\r\n");
      out.write("\t\t\t$('#idDiv').css('font-size', '8pt');\r\n");
      out.write("\t\t\t$('#idDiv').css('font-weight', 'bold');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$('#checkWriteForm').click(function(){\r\n");
      out.write("\t\t$('#nameDiv').empty();\r\n");
      out.write("\t\t$('#idDiv').empty();\r\n");
      out.write("\t\t$('#pwdDiv').empty();\r\n");
      out.write("\t\t$('#repwdDiv').empty();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif ($('#name').val() == '') {\r\n");
      out.write("\t\t\t$('#nameDiv').text('이름을 입력하세요.');\r\n");
      out.write("\t\t\t$('#nameDiv').css('color', 'red');\r\n");
      out.write("\t\t\t$('#nameDiv').css('font-size', '8pt');\r\n");
      out.write("\t\t\t$('#nameDiv').css('font-weight', 'bold');\r\n");
      out.write("\t\t\t$('#nameDiv').focus();\r\n");
      out.write("\t\t} else if ($('#id').val() == '') {\r\n");
      out.write("\t\t\t$('#idDiv').text('아이디를 입력하세요.');\r\n");
      out.write("\t\t\t$('#idDiv').css('color', 'red');\r\n");
      out.write("\t\t\t$('#idDiv').css('font-size', '8pt');\r\n");
      out.write("\t\t\t$('#idDiv').css('font-weight', 'bold');\r\n");
      out.write("\t\t\t$('#idDiv').focus();\r\n");
      out.write("\t\t} else if ($('#pwd').val() == '') {\r\n");
      out.write("\t\t\t$('#pwdDiv').text('비밀번호를 입력하세요.');\r\n");
      out.write("\t\t\t$('#pwdDiv').css('color', 'red');\r\n");
      out.write("\t\t\t$('#pwdDiv').css('font-size', '8pt');\r\n");
      out.write("\t\t\t$('#pwdDiv').css('font-weight', 'bold');\r\n");
      out.write("\t\t\t$('#pwdDiv').focus();\r\n");
      out.write("\t\t} else if ($('#pwd').val() != $('#repwd').val()) {\r\n");
      out.write("\t\t\t$('#repwdDiv').text('입력하신 비밀번호가 일치하지 않습니다.');\r\n");
      out.write("\t\t\t$('#repwdDiv').css('color', 'red');\r\n");
      out.write("\t\t\t$('#repwdDiv').css('font-size', '8pt');\r\n");
      out.write("\t\t\t$('#repwdDiv').css('font-weight', 'bold');\r\n");
      out.write("\t\t\t$('#repwdDiv').focus();\r\n");
      out.write("\t\t} else if ($('#name').val() != \"\"\r\n");
      out.write("\t\t\t\t&& $('#id').val() != \"\"\r\n");
      out.write("\t\t\t\t&& $('#pwd').val() == $('#repwd').val()) {\r\n");
      out.write("\t\t\talert(\"가입성공!!\");\r\n");
      out.write("\t\t\tlocation.href=\"../test/indexMain.jsp\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
